// <auto-generated />
using System;
using FlightBookingAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightBookingAPI.Migrations
{
    [DbContext(typeof(FlightContext))]
    [Migration("20241003155718_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("FlightBookingAPI.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Airline")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Airline = "Delta",
                            ArrivalDate = new DateTime(2024, 10, 4, 16, 57, 14, 292, DateTimeKind.Local).AddTicks(9507),
                            DepartureDate = new DateTime(2024, 10, 4, 10, 57, 14, 292, DateTimeKind.Local).AddTicks(9481),
                            Destination = "Los Angeles",
                            Origin = "New York",
                            Price = 299.99m
                        },
                        new
                        {
                            Id = 2,
                            Airline = "United",
                            ArrivalDate = new DateTime(2024, 10, 5, 13, 57, 14, 292, DateTimeKind.Local).AddTicks(9514),
                            DepartureDate = new DateTime(2024, 10, 5, 10, 57, 14, 292, DateTimeKind.Local).AddTicks(9513),
                            Destination = "Miami",
                            Origin = "Chicago",
                            Price = 199.99m
                        },
                        new
                        {
                            Id = 3,
                            Airline = "Delta",
                            ArrivalDate = new DateTime(2024, 10, 6, 16, 57, 14, 292, DateTimeKind.Local).AddTicks(9516),
                            DepartureDate = new DateTime(2024, 10, 6, 10, 57, 14, 292, DateTimeKind.Local).AddTicks(9516),
                            Destination = "San Francisco",
                            Origin = "New York",
                            Price = 399.99m
                        });
                });

            modelBuilder.Entity("FlightBookingAPI.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FlightId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PassengerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FlightId = 1,
                            PassengerName = "John Doe",
                            ReservationDate = new DateTime(2024, 10, 3, 10, 57, 14, 292, DateTimeKind.Local).AddTicks(9636)
                        },
                        new
                        {
                            Id = 2,
                            FlightId = 2,
                            PassengerName = "Jane Smith",
                            ReservationDate = new DateTime(2024, 10, 4, 10, 57, 14, 292, DateTimeKind.Local).AddTicks(9638)
                        },
                        new
                        {
                            Id = 3,
                            FlightId = 3,
                            PassengerName = "Alice Johnson",
                            ReservationDate = new DateTime(2024, 10, 5, 10, 57, 14, 292, DateTimeKind.Local).AddTicks(9639)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
